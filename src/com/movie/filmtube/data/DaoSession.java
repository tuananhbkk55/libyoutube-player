package com.movie.filmtube.data;

import java.util.Map;

import android.database.sqlite.SQLiteDatabase;
import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.AbstractDaoSession;
import de.greenrobot.dao.identityscope.IdentityScopeType;
import de.greenrobot.dao.internal.DaoConfig;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see de.greenrobot.dao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

	private final DaoConfig categoryDaoConfig;
	private final DaoConfig filmYoutubeDaoConfig;
	private final DaoConfig categoryAndFilmDaoConfig;

	private final CategoryDao categoryDao;
	private final FilmYoutubeDao filmYoutubeDao;
	private final CategoryAndFilmDao categoryAndFilmDao;

	public DaoSession(SQLiteDatabase db, IdentityScopeType type,
			Map<Class<? extends AbstractDao<?, ?>>, DaoConfig> daoConfigMap) {
		super(db);

		categoryDaoConfig = daoConfigMap.get(CategoryDao.class).clone();
		categoryDaoConfig.initIdentityScope(type);

		filmYoutubeDaoConfig = daoConfigMap.get(FilmYoutubeDao.class).clone();
		filmYoutubeDaoConfig.initIdentityScope(type);

		categoryAndFilmDaoConfig = daoConfigMap.get(CategoryAndFilmDao.class)
				.clone();
		categoryAndFilmDaoConfig.initIdentityScope(type);

		categoryDao = new CategoryDao(categoryDaoConfig, this);
		filmYoutubeDao = new FilmYoutubeDao(filmYoutubeDaoConfig, this);
		categoryAndFilmDao = new CategoryAndFilmDao(categoryAndFilmDaoConfig,
				this);

		registerDao(Category.class, categoryDao);
		registerDao(FilmYoutube.class, filmYoutubeDao);
		registerDao(CategoryAndFilm.class, categoryAndFilmDao);
	}

	public void clear() {
		categoryDaoConfig.getIdentityScope().clear();
		filmYoutubeDaoConfig.getIdentityScope().clear();
		categoryAndFilmDaoConfig.getIdentityScope().clear();
	}

	public CategoryDao getCategoryDao() {
		return categoryDao;
	}

	public FilmYoutubeDao getFilmYoutubeDao() {
		return filmYoutubeDao;
	}

	public CategoryAndFilmDao getCategoryAndFilmDao() {
		return categoryAndFilmDao;
	}

}
